package com.dtamai.onspec;

event IntegerValue {
  wildcard integer actual;

  action testFailed(integer expected, string expectation) {
    string reason := actual.toString() + " expected to be " + expectation + " " + expected.toString();
    SpecReporter().fail(reason);
  }

  action mustBe(integer expected) {
    if not (expected = actual) then {
      testFailed(expected, "equal");
    }
  }

  action mustNotBe(integer expected) {
    if not (expected != actual) then {
      testFailed(expected, "not equal");
    }
  }

  action mustBeGreaterThan(integer boundary) {
    if not (boundary < actual) then {
      testFailed(boundary, "greater than");
    }
  }

  action mustBeLessThan(integer boundary) {
    if not (boundary > actual) then {
      testFailed(boundary, "less than");
    }
  }

  action mustBeGreaterThanOrEqual(integer boundary) {
    if not (boundary <= actual) then {
      testFailed(boundary, "greater than or equal");
    }
  }

  action mustBeLessThanOrEqual(integer boundary) {
    if not (boundary >= actual) then {
      testFailed(boundary, "less than or equal");
    }
  }
}
