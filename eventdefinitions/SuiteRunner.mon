package com.dtamai.onspec;

monitor SuiteRunner {
  sequence<integer> specs := [];
  sequence<string> results := [];
  sequence<string> failures := [];

  action onload() {
    on all NewSuite() {
      spawn handleNewSuite;
    }
  }

  action handleNewSuite() {
    route _SpecDiscover();

    _SpecPresent spec;
    listener disc := on all _SpecPresent():spec {
      specs.append(spec.id);
    }

    on completed _SpecDiscover() {
      disc.quit();
      runSpec();
    }

    _Failure f;
    on all _Failure():f {
      results.append("F");
      failures.append("'" + f.context + "' failed: " + f.reason);
    }

    on all Success() {
      results.append(".");
    }

    on all Skip() {
      results.append("S");
    }

  }

  action runSpec() {
    if specs.size() <= 0 then { endSuite(); }

    integer currId := specs[0];
    route _SpecBegin(currId);
    on _SpecEnd(currId) {
      specs.remove(0);
      runSpec();
    }
  }

  action endSuite() {
    print "".join(results);
    print "\n".join(failures);
    die;
  }
}

