package com.dtamai.onspec;

event Suite {
  wildcard integer _id;
  SpecRunner _runner;
  SpecReporter _reporter;

  action describe(string text) returns integer {
    return _runner.addContext(text);
  }

  action it(string text) returns integer {
    return _runner.addSpec(text);
  }

  action T(string tags) {
    _runner.addTags(tags);
  }

  action init(action<> runnable) {
    self._id := integer.getUnique();
    on all NewSuite() -> _SpecDiscover() {
      spawn _handleNewSuite(runnable);
    }
  }

  action pass() {
    _reporter.pass();
  }

  action skip() {
    _reporter.skip();
  }

  action fail(string reason) {
    _reporter.fail(reason);
  }

  action done() {
    _reporter.pass();
  }

  action _handleNewSuite(action<> runnable) {
    route _SpecPresent(self._id);
    on _SpecBegin(_id) {
      _runner.run(runnable, self._id);
    }
  }

  action assertString(string actual) returns _AssertionString {
    //TODO: report counter
    _AssertionString r := new _AssertionString;
    r.actual := actual;
    return r;
  }
}
