package org.onspec;

using org.onspec.expectation.IntegerValue;
using org.onspec.expectation.BooleanValue;

monitor RandomGeneratorSpec {
  Suite _;

  action onload() {
    _.init(run);
  }

  constant integer SEED := 12345;

  action run() {
    on Spec(_.describe("RandomGenerator")) {
      on Spec(_.it("repeats numbers when using same seed")) {
        RandomGenerator r1 := new RandomGenerator;
        RandomGenerator r2 := new RandomGenerator;

        r1.init(SEED);
        r2.init(SEED);

        IntegerValue(r1.next()).mustBe(r2.next());
        _.done();
      }
    }

    on Spec(_.it("initializes itself if required")) {
      RandomGenerator r := new RandomGenerator;

      integer i := r.next();

      BooleanValue(r.initialized).mustBe(true);
      _.done();
    }

    on Spec(_.it("provides random numbers up to a maximum (non inclusive)")) {
      // not exaustive test, just documentation
      RandomGenerator r := new RandomGenerator;
      r.init(SEED);
      integer max := 3;

      integer rand := r.upTo(max);

      BooleanValue(rand < max).mustBe(true);
      _.done();
    }
  }
}
